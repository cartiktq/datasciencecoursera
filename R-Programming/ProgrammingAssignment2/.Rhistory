}
pollutantmean <- function(directory, pollutant, id = 1:332){
pollutants <- read.csv(directory, head = TRUE);
}
pollutantmean <- function(directory, pollutant, id = 1:332){
+     pollutants <- read.csv(directory, head = TRUE);
+ }
#pollutants <- read.csv(directory, head = TRUE);
}
}
for(i in id){
;
use{}
pollutantmean("/Users/cartik/Desktop/specdata/", "nitrate", 1:5);
pollutantmean("/Users/cartik/Desktop/specdata/", "nitrate", 1:5);
pollutantmean(character("/Users/cartik/Desktop/specdata/"), character("nitrate"), 1:5);
pollutantmean(character("/Users/cartik/Desktop/specdata/"), character("nitrate"), c(1:5);
pollutantmean(character("/Users/cartik/Desktop/specdata/"), character("nitrate"), c(1:5)
pollutantmean(character("/Users/cartik/Desktop/specdata/"), character("nitrate"), c(1:5))
pollutantmean(c("/Users/cartik/Desktop/specdata/"), c("nitrate"), c(1:5))
}
pollutantmean <- function(directory, pollutant, id = 1:332){
for(i in id){
print(i)
}
}
pollutantmean(c("/Users/cartik/Desktop/specdata/"), c("nitrate"), c(1:5))
directory = "/Users/cartik/Desktop/specdata"
directory = "/Users/cartik/Desktop/specdata/"
pollutant = "nitrate"
id = [1:5]
id <- [1:5]
id <- c[1:5]
id <- c(1:5)
directory
pollutantmean <- function(directory, pollutant, id = 1:332){
for(i in id){
fileName <- paste(directory, id, ".csv")
print(fileName)
}
}
pollutantmean(directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332){
for(i in id){
fileName <- paste(directory, i, ".csv", sep="")
print(fileName)
}
}
pollutantmean(directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332){
for(i in id){
fileName <- paste(directory, i, ".csv", sep="")
pollutants <- read.csv(fileName, header=TRUE)
}
dim(pollutants)
}
pollutantmean(directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332){
for(i in id){
w <- nchar(i);
while(w < 3){
i <- paste("0", i, sep="")
w <- w + 1
}
fileName <- paste(directory, i, ".csv", sep="")
pollutants <- read.csv(fileName, header=TRUE)
}
dim(pollutants)
}
pollutantmean(directory, pollutant, id)
?read.csv
?read.table
pollutantmean <- function(directory, pollutant, id = 1:332){
for(i in id){
w <- nchar(i);
while(w < 3){
i <- paste("0", i, sep="")
w <- w + 1
}
fileName <- paste(directory, i, ".csv", sep="")
temp <- read.csv(fileName, header=TRUE)
pollutants <- merge(temp, pollutants)
}
dim(pollutants)
}
pollutantmean(directory, pollutant, id)
parentDir <- "/Users/cartik/Desktop"
?rbind
source("load_data.R")
source("pollutantmean.R")
pollutantmean(directory, pollutant, id)
pollutantmean(directory, pollutant, id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean(directory, pollutant, id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean(directory, pollutant, id)
pollutantmean("specdata", "nitrate", id)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
pollutants
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
?mean
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("load_data.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", id)
source("pollutantmean.R")
source("load_data.R")
pollutantmean("specdata", "nitrate", id)
source("pollutantmean.R")
source("load_data.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
source("load_data.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("complete.R")
complete("specdata", 1:5)
source("padWithZeros.R")
source("padWithZeros.R")
source("padWithZeros.R")
source("load_data.R")
source("complete.R")
complete("specdata", 1:5)
source("load_data.R")
complete("specdata", 1:5)
source("load_data.R")
source("padWithZeros.R")
complete("specdata", 1:5)
source("padWithZeros.R")
source("load_data.R")
complete("specdata", 1:5)
source("padWithZeros.R")
source("load_data.R")
complete("specdata", 1:5)
data <- matrix(1:6, nrow = 2, ncol = 3)
data$rows
data$dim
nrows(data)
nrow(data)
ncol(data)
size(data[1,])
length(data[1,])
for(e in data[1, ]){
print(e)
}
?is.na
source("load_data.R")
source("padWithZeros.R")
source("complete.R")
complete("specdata", 1:5)
source("complete.R")
complete("specdata", 1:5)
source("complete.R")
complete("specdata", 1:5)
source("complete.R")
complete("specdata", 1:5)
source("complete.R")
complete("specdata", 1:5)
complete("specdata", 35:251)
complete("specdata", 35:39)
source("complete.R")
complete("specdata", 35:39)
source("complete.R")
complete("specdata", 35:39)
source("complete.R")
source("complete.R")
source("complete.R")
complete("specdata", 35:39)
source("complete.R")
complete("specdata", 35:39)
source("complete.R")
complete("specdata", 35:39)
source("complete.R")
complete("specdata", 35:39)
?setwd
?cor
?corr
?cor
source("corr.R")
cr <- corr("specdata", 10)
?read.csv
?list.files
source("corr.R")
cr <- corr("specdata", 10)
source("corr.R")
cr <- corr("specdata", 10)
head(cr)
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
summary(cr)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
?cor
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cor(1:5, 2:7)
cor(1:5, 2:6)
head(cor(1:5, 2:6))
summary(cor(1:5, 2:6))
cr <- corr("specdata", 1500)
source("corr.R")
cr <- corr("specdata", 1500)
source("corr.R")
cr <- corr("specdata", 1500)
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 1500)
summary(cr)
length(cr)
cr <- corr("specdata")
length(cr)
source("corr.R")
cr <- corr("specdata")
head(cr)
summary(cr)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 1500)
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit
()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
submit()
source("complete.R")
complete("specdata",1)
source("complete.R")
source("complete.R")
complete("specdata",1)
complete("specdata",c(2,4,6,8,10,12))
complete("specdata",c(2,4,8,10,12))
complete("specdata",30:25)
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
complete("specdata",30:25)
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
complete("specdata",c(2,4,8,10,12))
submit()
complete("specdata",c(2,4,8,10,12))
submit()
source("complete.R")
submit()
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",c(2,4,8,10,12))
?c
source("complete.R")
complete("specdata",c(2,4,8,10,12))
complete("specdata",1
)
complete("specdata",3)
source("complete.R")
source("complete.R")
complete("specdata",3)
source("complete.R")
complete("specdata",3)
submit()
source("complete.R")
submit()
is.recursive(output)
output <- complete("specdata",30:25)
is.recursive(output)
is.atomic(output)
sum(1,2,3,4,5)
hist(Nile)
hist(Nile)
oddcount <- function(x){
k <- 0
for (n in x){
if (n %% 2 == 1) k <- k + 1
}
}
oddcount <- function(x){
k <- 0
for (n in x){
if (n %% 2 == 1) k <- k + 1
}
return k
}
oddcount <- function(x){
k <- 0
for (n in x){
if (n %% 2 == 1) k <- k + 1
}
}
oddcount(c(1,3,5))
oddcount <- function(x){
k <- 0
for (n in x){
if (n %% 2 == 1) k <- k + 1
}
return (k)
}
oddcount(c(1,3,5))
oddcount(c(1,2,4,3,5))
38 %% 7
complete("specdata", c(2,4,8,10,12))
AS.DATA.FRAME(complete("specdata", c(2,4,8,10,12)))
as.data.frame(complete("specdata", c(2,4,8,10,12)))
complete("specdata", c(2,4,8,10,12))
complete("specdata", c(2,4,8,10,12))
complete("specdata", c(2,4,8,10,12))
source("complete.R")
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata", 3)
complete("specdata", 1)
submit()
submit()
submit()
library(datasets)
data(iris)
?iris
View(data)
View(output)
View(iris)
virginica.data <- iris[species=="virginica"]
virginica.data <- iris[Species=="virginica"]
virginica.data <- iris[iris$Species=="virginica"]
virginica.data <- iris[iris$Species=='virginica']
virginica.data <- iris[,,,,iris$Species=='virginica']
dim(iris)
attach(iris)
virginica.data <- iris[,,,,iris$Species=='virginica']
virginica.data <- iris[iris$Species=='virginica']
by(Sepal.Length, Species, mean)
apply(iris,2,mean)
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
View(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$cyl, mtcars$mpg)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
mtcars$cyl
mtcars$cyl==4
mtcars[mtcars$cyl==4]
mtcars$hp[mtcars$cyl==4]
mean(mtcars$hp[mtcars$cyl==4]) - mean(mtcars$hp[mtcars$cyl==8])
mean(mtcars$hp[mtcars$cyl==4])
mean(mtcars$hp[mtcars$cyl==8])
debug(ls)
ls
source("cachematrix.R")
pwd
getwd()
asg2wd <- "/Users/cartik/software/datasciencecoursera/R-Programming/ProgrammingAssignment2"
exit()
stop()
exit
Q
getwd()
asg2wd <- "/Users/cartik/software/datasciencecoursera/R-Programming/ProgrammingAssignment2/"
setwd(asg2wd)
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
matricesMatch(registry$mat, registry$inv)
matricesMatch(matrix.registry$mat, matrix.registry$inv)
source("cachematrix.R")
matricesMatch(matrix.registry$mat, matrix.registry$inv)
source("cachematrix.R")
matricesMatch(matrix.registry$mat, matrix.registry$inv)
nm <- matrix(c(1,2,3,4),2)
matricesMatch(matrix.registry$mat, nm)
class(nm)
class(matrix.registry$mat)
dim(nm)
dim(matrix.registry$mat)
all.equal(matrix.registry$mat, nm)
all.equal(nm, nm)
as.logical(all.equal(matrix.registry$mat, nm))
as.logical(all.equal(nm, nm))
is.na(as.logical(all.equal(matrix.registry$mat, nm)))
source("cachematrix.R")
matricesMatch(matrix.registry$mat, nm)
matricesMatch(matrix.registry$mat, matrix.registry$inv)
as.logical(solve(nm))
bm <- matrix(c(2,4,8,16),2)
solve(bm)
as.logical(solve(bm))
error(solve(bm))
is.error(solve(bm))
try(solve(bm))
try(solve(bm), silent=TRUE)
err <- try(solve(bm), silent=TRUE)
class(err)
class(err) != "try-error"
source("cachematrix.R")
View(matrix.registry)
class(err) != "try-error"
source("cachematrix.R")
View(matrix.registry)
View(matrix.registry)
source("cachematrix.R")
View(matrix.registry)
source("cachematrix.R")
cacheSolve(m)
nm
cacheSolve(nm)
a <- makeCacheMatrix(nm)
cacheSolve(a)
source("cachematrix.R")
a <- makeCacheMatrix(nm)
cacheSolve(a)
cacheSolve(a)
cacheSolve(a)
source("cachematrix.R")
a <- makeCacheMatrix(nm)
cacheSolve(a)
cacheSolve(a)
